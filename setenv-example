# ========================================================================= #
# Things you have to edit before you can proceed:
# ========================================================================= #
export PORTAINER_PORT='10000'
export MASTER_HOST='192.168.0.41'

# The address you will use for provisioning, should be accessible from your current machine
# If you provision the master from a local network - it can match PORTAINER_LOCAL_BASE_URL
export PORTAINER_EXTERNAL_URL="http://$MASTER_HOST:$PORTAINER_PORT"

# The address all containers will use inside a local network after provisioning.
export PORTAINER_INTERNAL_URL="http://$MASTER_HOST:$PORTAINER_PORT"

export SECRET_KEY='mmmm...so secret'

# This name will be used for all services set up.
export DEFAULT_USERNAME='snailshell'
export DEFAULT_PASSWORD='snailshellpass'

# A default key will be created on master provisioning, can be used to deploy services.
# Set to empty string to auto-generate a random key.
export CONTROL_PANEL_DEFAULT_DEPLOY_KEY='1234567890abcdef'

# ========================================================================= #
# Things you might want to customize, but it will work with the default settings
# ========================================================================= #
export DEBUG=false
export LOG_LEVEL=DEBUG

export CONTROL_PANEL_CONTAINER_NAME='ss_control_panel'
export CONTROL_PANEL_CELERY_MAIN_CONTAINER_NAME='ss_control_panel_celery_main'
export CONTROL_PANEL_CELERY_SERVICE_CONTAINER_NAME='ss_control_panel_celery_srv'
export CONTROL_PANEL_IMAGE_NAME='antonkir/snailshell_control_panel'
export CONTROL_PANEL_IMAGE_TAG='latest'
export CONTROL_PANEL_PORT='10001'
export CONTROL_PANEL_ADMIN_USER=$DEFAULT_USERNAME
export CONTROL_PANEL_ADMIN_PASSWORD=$DEFAULT_PASSWORD

export PORTAINER_ADMIN_USER=$DEFAULT_USERNAME
export PORTAINER_ADMIN_PASSWORD=$DEFAULT_PASSWORD
export PORTAINER_LOCAL_ENDPOINT_NAME='master'
export PORTAINER_DOCKER_CONTAINER_NAME='portainer_controller'
export PORTAINER_IMAGE_NAME='portainer/portainer'
export PORTAINER_IMAGE_TAG='latest'

export POSTGRES_IMAGE_NAME='postgres'
export POSTGRES_IMAGE_TAG='latest'
export POSTGRES_CONTAINER_NAME='postgres_main'
export POSTGRES_DBNAME_CONTROL_PANEL='snailshell_cp'
export POSTGRES_USER=$DEFAULT_USERNAME
export POSTGRES_PASSWORD=$DEFAULT_PASSWORD
export POSTGRES_PORT='5432'

export RABBITMQ_IMAGE_NAME='rabbitmq'
export RABBITMQ_IMAGE_TAG='3-management'
export RABBITMQ_CONTAINER_NAME='rabbitmq_main'
export RABBITMQ_PORT='5672'
export RABBITMQ_MANAGEMENT_PORT='10002'
export RABBITMQ_USER=$DEFAULT_USERNAME
export RABBITMQ_PASSWORD=$DEFAULT_PASSWORD

# Slaves will use this port to expose Docker Daemon API.
# Make sure it's not accessible from the Internet!
export DOCKERD_API_PORT='9999'

# Completely uninstall docker with all configs before continuing.
# We are going to install it with a special script, which can conflict with repo installation.
export CMD_UNINSTALL_DOCKER='apt purge -y docker docker.io docker-ce docker-engine || true'

export CMD_INSTALL_DOCKER='curl -fsSL get.docker.com -o /tmp/docker-install.sh && VERSION='18.02.0-ce' sh /tmp/docker-install.sh'
export CMD_DOCKER_EXTERNAL_IP='sed -i.bak -e "s/ExecStart=.*/ExecStart=\/usr\/bin\/dockerd -H fd:\/\/ -H tcp:\/\/0.0.0.0:{port}/" /lib/systemd/system/docker.service'
export CMD_DOCKER_RESTART='systemctl daemon-reload && systemctl restart docker'
# ========================================================================= #
# Things you should not touch really, it will break everything.
# Unless you really know what you are doing.
# ========================================================================= #
# It's the first endpoint created, always has id 1
export PORTAINER_LOCAL_ENDPOINT_ID='1'

# Default docker socket for local communications. We don't reconfigure
# docker to bind to socket on master node, as it's a security risk.
export DOCKER_LOCAL_SOCKET_PATH='unix:///var/run/docker.sock'

# Should match a value from Dockerfile
export CONTROL_PANEL_LINUX_USER='snailshell-cp-user'
export STATIC_ROOT='/opt/snailshell/control_panel/static/'
